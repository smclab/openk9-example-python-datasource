{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Liferay parser Api",
    "description": "An API to extract and parsing data from Liferay portal as users, calendars and elements from document media library"
  },
  "paths": {
    "/execute": {
      "post": {
        "tags": ["Extract data from Liferay portal"],
        "summary": "Launch extraction from liferay portal",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "domain": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "timestamp": {
                    "type": "integer",
                    "default": 0
                  },
                  "companyId": {
                    "type": "integer"
                  },
                  "datasourceId": {
                    "type": "integer"
                  }
                },
                "required": [
                  "domain",
                  "username",
                  "password",
                  "timestamp",
                  "companyId",
                  "datasourceId",
                  "task"
                ],
                "example": {
                  "domain": "http://liferay:8080",
                  "username": "XXXX",
                  "password": "XXXX",
                  "timestamp": 0,
                  "companyId": 1,
                  "datasourceId": 1,
                  "task": "user"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Extraction process started"
          },
          "400": {
            "description": "Bad request. Check form of json request."
          },
          "5XX": {
            "description": "Unexpected error. If Key error some json with specified parameter key is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "key": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "error": "Key Error",
                    "status": "username"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/status": {
      "get": {
        "tags": ["Status"],
        "summary": "See status of extraction",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": ["RUNNING", "ERROR", "SUCCESS", "null"]
                    }
                  },
                  "example": {
                    "message": "[2020-11-06 10:02:57,390] INFO in user_extraction: Extraction completed",
                    "status": "SUCCESS"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get-url": {
      "get": {
        "tags": ["Get Url"],
        "summary": "get url for ingestion",
        "responses": {
          "200": {
            "description": "Url of ingestion configured"
          }
        }
      }
    },
    "/set-url": {
      "post": {
        "tags": ["Set Url"],
        "summary": "Set url for ingestion",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "mailServer": {
                    "url": "string"
                  }
                },
                "required": ["url"],
                "example": {
                  "url": "dev-projectq.smc.it/api/v1/ingestion/"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ingestion url modified with dev-projectq.smc.it/api/v1/ingestion/"
          }
        }
      }
    }
  }
}
